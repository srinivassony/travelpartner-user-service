<!DOCTYPE html>
<html lang="en">
<head>
    <title>Travel partner | Feeds page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="description" content="#">
    <%- include('links'); %>
 <style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        padding: 20px;
      }
  
      .post-card {
        width: 550px;
        border: 1px solid #dbdbdb;
        background-color: #fff;
        border-radius: 5px;
        margin: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
      }
  
      .post-header {
        align-items: center;
        padding: 10px;
      }
  
      .profile-picture {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 10px;
      }
  
      .username {
        font-weight: bold;
      }
  
      .location {
        width: 200px;
        margin-left: 5px;
        color: #8e8e8e;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
  
      .post-image-container {
        position: relative;
        overflow: hidden;
      }

      .post-image-slider {
        display: flex;
        transition: transform 0.5s ease;
        max-width: 100%;
        max-height: 100%;
      }
  
      .post-image {
        width: 100%;
        height: 100%;
        object-fit: contain; /* Adjust the object-fit property */
        object-position: center; /* Center the image within the container */
      }
  
      .post-footer {
        padding: 10px;
        border-top: 1px solid #dbdbdb;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
  
      .like-btn,
      .comment-btn {
        background: none;
        border: none;
        cursor: pointer;
        color: #262626;
      }
  
      .heart-icon,
      .comment-icon {
        margin-right: 5px;
      }
  
      .description {
        padding: 10px;
      }
  
      .arrow-icon {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 24px;
        cursor: pointer;
        color: #262626;
        padding: 5px;
        border-radius: 50%;
        z-index: 2;
      }
  
      .left-arrow {
        left: 10px;
      }
  
      .right-arrow {
        right: 10px;
      }
  
      .hidden {
        display: none;
      }

      .dotsIcons {
            padding: 10px;
      }

       /* Optional: Adjust for smaller screens */
  @media screen and (max-width: 900px) {
    .post-card {
      width: calc(50% - 20px);
      /* Adjust margin/padding accordingly */
    }
  }

  @media screen and (max-width: 600px) {
    .post-card {
      width: calc(100% - 20px);
      /* Adjust margin/padding accordingly */
    }
  }


  .like-btn.liked .heart-icon {
    color: red;
    /* When liked, turn red */
  }

  .popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #fff;
    border: 1px solid #ddd;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    width: 800px; /* Limit maximum width */
    z-index: 1000; /* Adjust the z-index to ensure it appears above other content */
  }

  /* Responsive styles */
@media screen and (max-width: 600px) {
    .popup {
      width: 90%; /* Adjust width for smaller screens */
    }
  }

  @media screen and (max-width: 900px) {
    .post-card {
      width: 90%;
      /* Adjust margin/padding accordingly */
    }
  }

  @media screen and (max-width: 700px) {
    .post-card {
      width: 90%;
      /* Adjust margin/padding accordingly */
    }
  }


  .popup-content {
    padding: 20px;
  }

  .popup-content {
    max-height: 70vh; /* Limit maximum height */
    overflow-y: auto; /* Enable vertical scroll if content exceeds the height */
  }

  .containerComment {
    position: relative;
  }

  #comment-icon {
    cursor: pointer;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    font-size: 16px;
  }

  .chat-messages {
    max-height: 200px;
    overflow-y: auto;
    margin-bottom: 15px;
    padding-right: 10px;
  }

  .message {
    background-color: #f1f0f0;
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 5px;
  }

  .chat-input {
    display: flex;
  }

  .message-input {
    flex: 1;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 14px;
    margin-right: 10px;
  }

  .send-btn {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 5px;
    padding: 8px 15px;
    font-size: 14px;
    cursor: pointer;
  }

  .close-btn {
    background-color: #fff;
    border: 1px solid #ddd;
    color: #333;
    border-radius: 5px;
    padding: 8px 15px;
    font-size: 14px;
    cursor: pointer;
    margin-top: 10px;
  }

  .close-btn:hover {
    background-color: #f9f9f9;
  }

   /* CSS styles remain unchanged from the previous version */
   .user-photo {
    width: 30px;
    height: 30px;
    border-radius: 50%; /* Make the photo round */
    margin-right: 10px;
    overflow: hidden; /* Ensure the photo stays within the circle */
  }
 </style>
</head>
<body>

    <%- include('loader'); %>

    <div id="pcoded" class="pcoded">
        <div class="pcoded-overlay-box"></div>
        <div class="pcoded-container navbar-wrapper">
            <%- include('topNav'); %>
                <div class="pcoded-main-container">
                    <div class="pcoded-wrapper">
                        <%- include('sideNav'); %>
                            <div class="pcoded-content">
                                <div class="pcoded-inner-content">
    
                                    <div class="main-body">
                                        <div class="page-wrapper">
    
                                            <div class="card borderless-card">
                                                <div class="card-block primary-breadcrumb">
                                                    <div class="breadcrumb-header">
                                                        <h5>Travel-partner is a Social Travel Community & Experiences Marketplace</h5>
                                                        <span>Your social media feeds are like a curated window into the world, offering glimpses into the lives, thoughts, and experiences of those you follow.</span>
                                                    </div>
                                                    <div class="page-header-breadcrumb">
                                                        <ul class="breadcrumb-title">
                                                            <li class="breadcrumb-item" style="float: left;">
                                                                <a href="/">
                                                                    <i class="icofont icofont-home"></i>
                                                                </a>
                                                            </li>
                                                            <li class="breadcrumb-item" style="float: left;"><a
                                                                    href="/user-posts">Users Posts</a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
    
                                            <div class="page-body">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="card">
                                                            <div class="card-header">
                                                                <h5>Social media feeds</h5>
                                                                <div class="card-header-right">
                                                                    <ul class="list-unstyled card-option">
                                                                        <li><i class="feather icon-maximize full-card"></i>
                                                                        </li>
                                                                        <li><i class="feather icon-minus minimize-card"></i>
                                                                        </li>
                                                                    </ul>
                                                                </div>
                                                            </div>
                                                            <div class="card-block">
                                                                <p>
                                                                    Your social media feeds are like a curated window into
                                                                    the world, offering glimpses into the lives, thoughts,
                                                                    and experiences of those you follow. They're a dynamic
                                                                    tapestry of updates, photos, videos, and stories that
                                                                    reflect the diversity of interests, opinions, and
                                                                    activities of your online community.
                                                                </p>
                                                                <p>
                                                                    Scrolling through your feeds can feel like embarking on
                                                                    a journey, where each post is a unique destination,
                                                                    inviting you to laugh, learn, empathize, or simply
                                                                    connect with others. From the latest news and trends to
                                                                    personal anecdotes and shared moments, your feeds serve
                                                                    as a digital mosaic, constantly evolving and shaping
                                                                    your online experience.
                                                                </p>
                                                                <p>
                                                                    Whether you're seeking inspiration, entertainment, or a
                                                                    sense of belonging, your social media feeds provide a
                                                                    virtual sanctuary where you can engage with friends,
                                                                    family, and like-minded individuals from around the
                                                                    globe. They're not just a collection of updates but a
                                                                    reflection of the interconnectedness of our digital age,
                                                                    where every like, comment, and share contributes to the
                                                                    vibrant tapestry of online culture.
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
    
                                            <div class="page-body">
                                                <div class="card-container">
                                                    <% if(postInfo && postInfo.length > 0) {
                                                        postInfo.forEach(function(post) { %>
                                            
                                                        <div class="post-card">
                                                            <div class="post-header">
                                                                <div class="row">
                                                                    <div class="col-lg-10">
                                                                        <% if(post && post.profilePicId && post.profilePicName ) {%>
                                                                            <img src="../images/uploads/<%= post.profilePicId %>/<%= post.profilePicName %>"
                                                                                alt="<%= post.profilePicName %>" class="profile-picture">
                                                                            <% } else {%>
                                                                                <img src="../images/chat__person.png"
                                                                                    alt="image" class="profile-picture">
                                                                                <% } %>
                                                                                    <span class="username">
                                                                                        <%= post.userName %>
                                                                                    </span>
                                                                                    <span class="location" id="location">is at
                                                                                        <a class="mytooltip" href="javascript:void(0)">
                                                                                            <%= post.truncatedLocation %>
                                                                                                <span class="tooltip-content5">
                                                                                                    <span class="tooltip-text3">
                                                                                                        <span class="tooltip-inner2">
                                                                                                            <%= post.location %>
                                                                                                        </span>
                                                                                                    </span>
                                                                                                </span>
                                                                                        </a>
                                                                                    </span>
                                                                    </div>
                                                                    <div class="col-sm-2">
                                                                        <div class="user-profile header-notification dotsIcons">
                                                                            <div class="dropdown-primary dropdown">
                                                                                <div class="dropdown-toggle" data-toggle="dropdown">
                                                                                    <i class="fa fa-ellipsis-v"></i>
                                                                                </div>
                                                                                <ul class="show-notification profile-notification dropdown-menu" data-dropdown-in="fadeIn"
                                                                                    data-dropdown-out="fadeOut" style="padding: 10px;">
                                                                                    <li>
                                                                                        <button type="button" class="btn btn-primary btn-sm pnotify-confirm" id="pnotify-confirm" data-post-id="<%= post.id %>"><i class="fa fa-trash"></i> Delete</button>
                                                                                    </li>
                                                                                </ul>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        
                                                            <div class="post-image-container">
                                                                <span class="arrow-icon left-arrow hidden">&#10094;</span>
                                                                <span class="arrow-icon right-arrow hidden">&#10095;</span>
                                                                <div class="post-image-slider">
                                                                    <% if(post && post.postImages.length> 0) {
                                                                        post.postImages.forEach(function(postImage) { %>
                                                                        <img src="../gallery/<%= postImage.postFieldId %>/<%= postImage.postFileName %>"
                                                                            alt="<%= postImage.postFileName %>" class="post-image">
                                                                        <% }); } %>
                                                                </div>
                                                            </div>
                                                        
                                                            <div class="description">
                                                                <%= post.description %>
                                                            </div>
                                                        
                                                            <div class="post-footer">
                                                                <a class="like-btn" id="likeButton" data-post-id="<%= post.id %>"><i class="fa fa-heart-o heart-icon"></i><span
                                                                        class="likes-count" id="likeCount">
                                                                        <%= post.likesCount %>
                                                                    </span> Like</a>
                                                                <div class="containerComment">
                                                                    <div class="post-card-info" data-post-id="<%= post.id %>">
                                                                        <a class="comment-btn comment-icon" id="comment-icon" data-post-id="<%= post.id %>"><i
                                                                                class="fa fa-comments-o"></i> <span class="comments-count" id="commentCount">
                                                                                <%= post.commentsCount %>
                                                                            </span> comment</a>
                                                                        <div class="popup">
                                                                            <div class="popup-content">
                                                                                <div class="chat-messages" id="chat-messages-<%= post.id %>"></div>
                                                                                <div class="chat-input">
                                                                                    <input type="text" class="message-input" placeholder="Type your message...">
                                                                                    <input type="hidden" value="<%= post.id %>" id="postId" class="postId">
                                                                                    <input type="hidden" value="<%= profilePicId %>" id="profilePicId" class="profilePicId">
                                                                                    <input type="hidden" value="<%= profilePicName %>" id="profilePicName"
                                                                                        class="profilePicName">
                                                                                    <button class="send-btn">Send</button>
                                                                                </div>
                                                                                <button class="close-btn">Close</button>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <% }); } else { %>
                                                            <div class="page-body">
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="card">
                                                                            <div class="card-header">
                                                                                <h5>Social media feeds</h5>
                                                                                <div class="card-header-right">
                                                                                    <ul class="list-unstyled card-option">
                                                                                        <li><i class="feather icon-maximize full-card"></i>
                                                                                        </li>
                                                                                        <li><i class="feather icon-minus minimize-card"></i>
                                                                                        </li>
                                                                                    </ul>
                                                                                </div>
                                                                            </div>
                                                                            <div class="card-block">
                                                                                <p style="text-align: center;">
                                                                                    There is no social media feeds now please add the post to display the social media feeds.
                                                                                </p>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <% }%>
                                                </div>
                                            
                                            </div>
    
                                        </div>
                                    </div>
                                    <div id="styleSelector">
                                    </div>
                                </div>
                            </div>
                    </div>
                </div>
        </div>
    </div>

<%- include('scripts'); %>

<script>

    document.querySelectorAll('.pnotify-confirm').forEach(function (notify)
    {
        notify.addEventListener('click', function ()
        {
            let postId = notify.dataset.postId;
            console.log('postId', postId)
            var notice = new PNotify({ title: 'Are you sure ?', text: '<p>Once you delete the post, you will not be able to recover it.</p>', hide: false, type: 'warning', confirm: { confirm: true, buttons: [{ text: 'Yes', addClass: 'btn btn-sm btn-primary' }, { addClass: 'btn btn-sm btn-link' }] }, buttons: { closer: false, sticker: false }, history: { history: false } })
            notice.get().on('pnotify.confirm', function ()
            {
                fetch('/post-delete/'+ postId,{
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response =>
                    {
                        if (response.ok)
                        {
                            return response.json();
                        }

                        throw new Error('Network response was not ok.');
                    })
                    .then(data =>
                    {
                        console.log(data)
                    })
                    .catch(error =>
                    {
                        console.error('Error checking ', error);
                    });
                    
                    location.reload();
            })
            notice.get().on('pnotify.cancel', function () { });
        });
    });
</script>

<script>
    document.querySelectorAll('.post-card').forEach(card =>
    {
        const slider = card.querySelector('.post-image-slider');
        const images = card.querySelectorAll('.post-image');
        const leftArrow = card.querySelector('.left-arrow');
        const rightArrow = card.querySelector('.right-arrow');

        if (images.length > 1)
        {
            leftArrow.classList.remove('hidden');
            rightArrow.classList.remove('hidden');
        }

        let currentSlide = 0;

        leftArrow.addEventListener('click', () =>
        {
            if (currentSlide === 0)
            {
                currentSlide = images.length - 1;
            } else
            {
                currentSlide--;
            }
            updateSlider();
        });

        rightArrow.addEventListener('click', () =>
        {
            if (currentSlide === images.length - 1)
            {
                currentSlide = 0;
            } else
            {
                currentSlide++;
            }
            updateSlider();
        });

        function updateSlider()
        {
            slider.style.transform = `translateX(-${currentSlide * 100}%)`;
        }
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function ()
    {
        document.querySelectorAll('.like-btn').forEach(function (button)
        {
            let postId = button.dataset.postId;

            var requestData = {
                id: "<%= id %>", // Example user ID, replace with your actual parameter
                postId: postId
            };

            // Make an initial API call to check if the post is liked
            fetch('/api/like', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData) // Send post ID in the request body
            })
                .then(response =>
                {
                    if (response.ok)
                    {
                        return response.json();
                    }
                    throw new Error('Network response was not ok.');
                })
                .then(data =>
                {

                    if (data && data.postLikeList && data.postLikeList.isLike === 1) 
                    {
                        // If post is liked, turn the like button red
                        button.classList.add('liked');
                    } else
                    {
                        // If post is not liked, turn the like button black
                        button.classList.remove('liked');
                    }
                })
                .catch(error =>
                {
                    alert('Error checking like status:', error)
                    console.error('Error checking like status:', error);
                });
        });
    });

</script>

<script>
    document.querySelectorAll('.like-btn').forEach(function (button)
    {
        button.addEventListener('click', function ()
        {
            let isLiked = this.classList.contains('liked');
            let likeCountElement = this.querySelector('.likes-count');
            let likeCount = parseInt(likeCountElement.textContent);
            let postId = button.dataset.postId;

            // Simulate API call URL (replace with your actual API endpoints)
            let apiUrl = isLiked ? '/api/update/unlike' : '/api/update/like';

            var requestData = {
                id: "<%= id %>", // Example user ID, replace with your actual parameter
                postId: postId,
                uuid: "<%= uuid %>"
            };

            // Simulate fetch call
            fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData) // Send post ID in the request body
            })
                .then(response =>
                {
                    if (response.ok)
                    {
                        return response.json();
                    }
                    throw new Error('Network response was not ok.');
                })
                .then(data =>
                {

                    if (data && data.status === 1) 
                    {
                        // If post is liked, turn the like button red
                        if (isLiked)
                        {
                            likeCount--;
                            button.classList.remove('liked');
                        } else
                        {
                            likeCount++;
                            button.classList.add('liked');
                        }
                        likeCountElement.textContent = likeCount; // Update like count
                    }
                })
                .catch(error =>
                {
                    console.error('Error:', error);
                });
        });
    });
</script>

<script>
    // Select all post cards
    var postCards = document.querySelectorAll('.post-card-info');

    // Iterate through each post card
    postCards.forEach(function (card)
    {
        // Event listener for comment icon click
        card.querySelector('.comment-icon').addEventListener("click", function ()
        {
            card.querySelector('.popup').style.display = "block";
        });

        // Event listener for close button click
        card.querySelector('.close-btn').addEventListener("click", function ()
        {
            card.querySelector('.popup').style.display = "none";
        });

        // Event listener for send button click
        card.querySelector('.send-btn').addEventListener("click", function ()
        {
            sendMessage(card);
        });

        // Event listener for message input enter press
        card.querySelector('.message-input').addEventListener("keypress", function (e)
        {
            if (e.key === 'Enter')
            {
                sendMessage(card);
            }
        });
    });

    function sendMessage(card)
    {
        var messageInput = card.querySelector('.message-input');
        var message = messageInput.value.trim();

        var postId = card.querySelector('.postId').value;
        var profilePicId = card.querySelector('.profilePicId').value;
        var profilePicName = card.querySelector('.profilePicName').value;

        console.log('postId',postId)
        console.log('message',message)


        if (message !== "")
        {
            var chatMessages = card.querySelector('.chat-messages');
            var newMessage = document.createElement("div");

            var userPhotoURL = null

            // User photo and name (replace these with actual user data)
            if(profilePicId && profilePicName)
            {
                userPhotoURL = "../images/uploads/<%= profilePicId %>/<%= profilePicName %>";
            }
            else
            {
                userPhotoURL = "../images/human.png";
            }

            var userName = "<%= username %>";

            // Create elements for user photo and name
            var userPhoto = document.createElement("img");
            userPhoto.src = userPhotoURL;
            userPhoto.classList.add("user-photo");

            var userNameElement = document.createElement("div");
            userNameElement.textContent = userName;
            userNameElement.classList.add("user-name");

            // Create element for message content
            var messageContent = document.createElement("div");
            messageContent.textContent = message;

            // Assemble message
            newMessage.appendChild(userPhoto);
            newMessage.appendChild(userNameElement);
            newMessage.appendChild(messageContent);

            newMessage.classList.add("message");
            chatMessages.appendChild(newMessage);

            var requestData = {
                id: "<%= id %>", // Example user ID, replace with your actual parameter
                postId: postId,
                message : message,
                uuid: "<%= uuid %>"
            };

            fetch('/api/add/comment', {
                 method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(requestData) // Send post ID in the request body
            })
                .then(function (response)
                {
                    if (!response.ok)
                    {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(function (data)
                {
                    console.log(data);
                    
                    if(data.status === 1)
                    {
                        alert('comment added')
                        location.reload();
                    }
                    else
                    {
                        alert('comment is not added', data)
                    }
                  
                    // Handle success
                })
                .catch(function (error)
                {
                    alert('error', error)
                    console.error('Error:', error.message);
                    // Handle error
                });
            // Clear input
            messageInput.value = "";
            // Scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }
    }
</script>

<script>
    // Function to fetch and display previous comments for a specific post
    function fetchPreviousComments(postId)
    {
        var requestData = {
            id: "<%= id %>", // Example user ID, replace with your actual parameter
            postId: postId
        };

        console.log('requestData', requestData)

        fetch('/api/comments', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData) // Send post ID in the request body
        })
            .then(response =>
            {
                if (response.ok)
                {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            })
            .then(data =>
            {
                let postCommentDetails = data && data.postCommentList ? data.postCommentList : [];

                const chatMessages = document.getElementById(`chat-messages-${postId}`);

                if (!chatMessages)
                {
                    console.log('chat-messages element not found.');
                    return; // Exit the function if chat-messages element is not found
                }
                chatMessages.innerHTML = ""; // Clear previous comments
                
                    console.log('here')

                    if (postCommentDetails.length > 0)
                    {
                        console.log('here1')
                        postCommentDetails.forEach(comment =>
                        {
                            if (comment.postId === postId)
                            {
                                var newMessage = document.createElement("div");
                                var userPhotoURL = null;
                                // User photo and name (replace these with actual user data)
                                if (comment.profilePicId && comment.profilePicName)
                                {
                                    userPhotoURL = '../images/uploads/' + comment.profilePicId + '/' + comment.profilePicName;
                                }
                                else
                                {
                                    userPhotoURL = "../images/human.png";
                                }
                                
                                console.log('userPhotoURL', userPhotoURL)
                                // Create elements for user photo and name
                                var userPhoto = document.createElement("img");
                                userPhoto.src = userPhotoURL;
                                userPhoto.classList.add("user-photo");

                                var userNameElement = document.createElement("div");
                                userNameElement.textContent = comment.userName;
                                userNameElement.classList.add("user-name");

                                // Create element for message content
                                var messageContent = document.createElement("div");
                                messageContent.textContent = comment.comment;

                                // Assemble message
                                newMessage.appendChild(userPhoto);
                                newMessage.appendChild(userNameElement);
                                newMessage.appendChild(messageContent);

                                newMessage.classList.add("message");
                                chatMessages.appendChild(newMessage);
                            }

                        });
                    }
                    else
                    {
                        console.log('No comments found.'); // Log if there are no comments
                    }
               
            })
            .catch(error =>
            {
                console.log('Error:', error.message);
                // Handle error
            });
    }

    // Example: When the user clicks on a post card
    document.querySelectorAll('.post-card-info').forEach(postCard =>
    {
        postCard.addEventListener('click', () =>
        {
            const postId = postCard.dataset.postId;
            fetchPreviousComments(postId);
        });
    });

</script>

</body>

</html>